作者：MYM
邮箱：895348025@qq.com

目的：
此文件用以记录该操作系统开发过程中所遇到的找了多于1天的bugs，并警示后来的读者。

2020/11/18 ~ 2020/11/20：
这几天新增了分页机制，让CPU在段页模式运行。添加完代码后，
系统一运行就崩溃重启。排查了一天，在启动分页时模拟器报错无法把线性地址转换成物理地址，
进而系统崩溃。历时两天，发现bug源于初始化页目录表和页表时忘记设置P位，
导致CPU认为所有页都不存在于内存。置1运行，CPU成功进入段页模式。值得一提的是，
对于页表的初始化函数init_page()，修改了不少于20次才发现。


2020/11/21 ~ 2020/11/23：
这几天新增了进程/线程/任务，实现多任务系统。添加完代码后，
又是系统一运行就崩溃重启。排查了一天，发现CPU报错无效TSS异常，
然后报错通用保护异常，几番轮回后报双重错误，导致CPU复位重启。
首先对进程初始化过程进行排查，发现堆栈平衡上有问题。修复运行，
问题依然存在。又想到中断发生时存在ring3到ring0的特权级转换，
于是检查IDT，未找到错误。然后检查TSS相关的函数，尝试了数种猜想
都未能解决。又检查GDT、LDT里各个描述符的的运行情况，也未找到
问题。多次检查操作系统运行时寄存器的变化，未找到问题。查看进程表，
也未能找到错误。最后再查看TSS里各值，发现ss0的值为0xC，并非8的倍数，
于是查看初始化TSS的函数init_tss()，发现语句tss.ss0 = KERNEL_DS;
查看KERNEL_DS的值，果然为0xC。换成0x10运行，成功运行。